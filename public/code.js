"use strict";function t(t,e,i,o){return new(i||(i=Promise))((function(n,a){function s(t){try{d(o.next(t))}catch(t){a(t)}}function r(t){try{d(o.throw(t))}catch(t){a(t)}}function d(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(s,r)}d((o=o.apply(t,e||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError,console.clear(),figma.showUI(__html__,{width:330,height:500,themeColors:!0});const e=figma.currentPage.findAllWithCriteria({types:["COMPONENT"]});let i=[];function o(){return t(this,void 0,void 0,(function*(){let t;try{t=yield figma.clientStorage.getAsync("tutorial")}catch(t){console.log("Storage error:",t)}figma.ui.postMessage({type:"loaded-tutorial",data:t||void 0})}))}function n(t,e){return{x:0+64*e,y:0+80*t}}0!==e.length&&e.forEach((t=>{const e=t.getPluginData("importedIcon");if(!e)return;let o=JSON.parse(e);o.status="",i.push(o)})),0!==i.length?figma.ui.postMessage({type:"loaded-nodes",data:i}):figma.ui.postMessage({type:"loaded-nodes-empty"}),o(),figma.ui.onmessage=t=>{if("get-tutorials"===t.type&&(console.log("get-tutorials"),o()),"save-tutorials"===t.type&&(figma.clientStorage.setAsync("tutorial",t.data),o()),"create-library"===t.type){let e=0,o=0;const a=50;let s={added:[],updated:[]};t.doc.forEach(((t,r)=>{e=Math.floor(r/a),o=r%a;let d=t.hash;if(i.findIndex((t=>t.hash==d)),"added"===t.status){const i=t,a=figma.createNodeFromSvg(t.svg);a.name="svg";const r=figma.createComponent();r.resizeWithoutConstraints(a.width,a.height),r.appendChild(a),figma.ungroup(a);let d,c=n(e,o);r.x=c.x,r.y=c.y,d=t.folder.join("/")+(t.folder.length>0?"/":"")+t.name,t.dimensions[0]!==t.dimensions[1]&&(d=d+"_"+t.dimensions[0]),r.name=d,i.id=r.id,r.setPluginData("importedIcon",JSON.stringify(i)),s.added.push(t)}else{let i=figma.getNodeById(t.id);if(i){let t=n(e,o);i.x=t.x,i.y=t.y}}if("changed"===t.status){let e=figma.getNodeById(t.id);const i=figma.createNodeFromSvg(t.svg);i.name="svg";const o=e.children;e.resizeWithoutConstraints(i.width,i.height),o.forEach((t=>{t.remove()}));const n=t;e.setPluginData("importedIcon",JSON.stringify(n)),e.appendChild(i),figma.ungroup(i)}if("deleted"===t.status){const e=t;figma.getNodeById(t.id).setPluginData("importedIcon",JSON.stringify(e))}}));for(const t in s)console.log(`${s[t].length} item(s) ${t}`);const r=figma.getNodeById("0:0");Object.keys(r.getRelaunchData()).includes("update")||r.setRelaunchData({update:"Import SVGs to update icon components in this file"}),figma.ui.postMessage({type:"done-create-library"}),figma.notify("Successfully updated icon components")}};
